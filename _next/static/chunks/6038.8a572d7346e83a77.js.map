{"version":3,"file":"static/chunks/6038.8a572d7346e83a77.js","mappings":"uIACA,IAAAA,EAAA,CADAC,OAAAC,MAAA,EAA6B,4EAA8F,8HAA8I,iBAAoB,EAAG,CAAI,qBAAwB,CAAI,wEAA+E,CAAI,UAAc,GAAO,6BAAgC,GAAS,2CAA8C,GAAS,yBAA6B,yEAAkF,aAAmB,MAAU,WAAe,8CAAsD,GAAO,kCAAsC,mDAAiE,mEAAmF,yDAAgE,EAAG,EAAG,CAAI,0DAAkE,GAAO,kCAAqC,GAAS,kCAAqC,GAAS,4BAA+B,GAAS,mCAAuC,oDAAkE,mEAAmF,yDAAgE,EAAG,EAAG,CAAI,2DAAmE,GAAO,mCAAsC,GAAS,mCAAsC,GAAS,4BAA+B,GAAS,oCAAwC,qDAAmE,mEAAmF,yDAAgE,EAAG,EAAG,CAAI,UAAc,GAAO,2CAA+C,kEAA2E,CAAI,qBAAwB,CAAI,sIAAiJ,EAAG,UAAgB,WAAe,wCAAoD,gCAAwC,GAAO,2CAA+C,6DAA2E,UAAc,GAAO,kCAAsC,kLAAuL,EAAG,CAAI,4BAAoC,GAAO,2CAA+C,wDAAiE,CAAI,mCAA2C,GAAO,2CAA+C,kEAAgF,yBAAuB,8BAAuC,EAAG,CAAI,4BAAoC,GAAO,2CAA+C,uDAAgE,CAAI,yBAAiC,GAAO,2CAA+C,8CAAuD,EAAG,GAAK,+CAGh5G","sources":["webpack://_N_E/./node_modules/shiki/dist/langs/po.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Gettext PO\", \"fileTypes\": [\"po\", \"pot\", \"potx\"], \"name\": \"po\", \"patterns\": [{ \"begin\": '^(?=(msgid(_plural)?|msgctxt)\\\\s*\"[^\"])|^\\\\s*$', \"comment\": \"Start of body of document, after header\", \"end\": \"\\\\z\", \"patterns\": [{ \"include\": \"#body\" }] }, { \"include\": \"#comments\" }, { \"match\": '^msg(id|str)\\\\s+\"\"\\\\s*$\\\\n?', \"name\": \"comment.line.number-sign.po\" }, { \"captures\": { \"1\": { \"name\": \"constant.language.po\" }, \"2\": { \"name\": \"punctuation.separator.key-value.po\" }, \"3\": { \"name\": \"string.other.po\" } }, \"match\": '^\"(?:([^\\\\s:]+)(:)\\\\s+)?([^\"]*)\"\\\\s*$\\\\n?', \"name\": \"meta.header.po\" }], \"repository\": { \"body\": { \"patterns\": [{ \"begin\": \"^(msgid(_plural)?)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.msgid.po\" } }, \"end\": '^(?!\")', \"name\": \"meta.scope.msgid.po\", \"patterns\": [{ \"begin\": '(\\\\G|^)\"', \"end\": '\"', \"name\": \"string.quoted.double.po\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\\\\\\"]', \"name\": \"constant.character.escape.po\" }] }] }, { \"begin\": \"^(msgstr)(?:(\\\\[)(\\\\d+)(\\\\]))?\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.msgstr.po\" }, \"2\": { \"name\": \"keyword.control.msgstr.po\" }, \"3\": { \"name\": \"constant.numeric.po\" }, \"4\": { \"name\": \"keyword.control.msgstr.po\" } }, \"end\": '^(?!\")', \"name\": \"meta.scope.msgstr.po\", \"patterns\": [{ \"begin\": '(\\\\G|^)\"', \"end\": '\"', \"name\": \"string.quoted.double.po\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\\\\\\"]', \"name\": \"constant.character.escape.po\" }] }] }, { \"begin\": \"^(msgctxt)(?:(\\\\[)(\\\\d+)(\\\\]))?\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.msgctxt.po\" }, \"2\": { \"name\": \"keyword.control.msgctxt.po\" }, \"3\": { \"name\": \"constant.numeric.po\" }, \"4\": { \"name\": \"keyword.control.msgctxt.po\" } }, \"end\": '^(?!\")', \"name\": \"meta.scope.msgctxt.po\", \"patterns\": [{ \"begin\": '(\\\\G|^)\"', \"end\": '\"', \"name\": \"string.quoted.double.po\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\\\\\\"]', \"name\": \"constant.character.escape.po\" }] }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.po\" } }, \"match\": \"^(#~).*$\\\\n?\", \"name\": \"comment.line.number-sign.obsolete.po\" }, { \"include\": \"#comments\" }, { \"comment\": 'a line that does not begin with # or \". Could improve this regexp', \"match\": '^(?!\\\\s*$)[^#\"].*$\\\\n?', \"name\": \"invalid.illegal.po\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"^(?=#)\", \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(#,)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.flag.po\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.flag.po\" } }, \"match\": \"(?:\\\\G|,\\\\s*)((?:fuzzy)|(?:no-)?(?:c|objc|sh|lisp|elisp|librep|scheme|smalltalk|java|csharp|awk|object-pascal|ycp|tcl|perl|perl-brace|php|gcc-internal|qt|boost)-format)\" }] }, { \"begin\": \"#\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.extracted.po\" }, { \"begin\": \"(#:)[ \\\\t]*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.reference.po\", \"patterns\": [{ \"match\": \"(\\\\S+:)([\\\\d;]*)\", \"name\": \"storage.type.class.po\" }] }, { \"begin\": \"#\\\\|\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.previous.po\" }, { \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.po\" }] }] } }, \"scopeName\": \"source.po\", \"aliases\": [\"pot\", \"potx\"] });\nvar po = [\n  lang\n];\n\nexport { po as default };\n"],"names":["po","Object","freeze"],"sourceRoot":""}